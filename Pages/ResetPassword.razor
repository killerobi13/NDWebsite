@page "/ResetPassword"
@using System.Text.RegularExpressions
@using System.Net.Mail
@using Exceptions
@inject Helpers.SessionState Session
@inject IJSRuntime JSRuntime
@inject Services.UserService UserService
@inject NavigationManager navManager
@using System.Web
<fieldset id="reg_form" class="register-form">
    <div id="legend">
        <legend>Credentials Recovery</legend>
    </div>
    <div class="control-group">
        <!-- E-mail -->
        <label class="control-label" for="email">Email</label>
        <div class="controls">
            <input type="text" id="email" name="email" placeholder="" @bind-value="Email" @bind-value:event="onchange" class="input-xlarge">
            <p class="help-block" style="color:@EmailValidationColor">@EmailValidation</p>
        </div>
    </div>
    <div class="control-group">
        <!-- Button -->
        <div class="controls">
            <button class="btn btn-success" style="width:100%" @onclick="Reset">Reset Password </button>
            <p class="help-block" style="color:@FinalValidationColor;text-align:center; padding:5px">@FinalValidation</p>

        </div>
    </div>
</fieldset>

@code {

    private string FinalValidationColor { get; set; } = RED;
    private string FinalValidation { get; set; } = "";

    private string Email { get; set; } = "";


    private string EmailValidation { get; set; } = "";

    private string EmailValidationColor { get; set; } = RED;

    private const string GREEN = "green";
    private const string RED = "red";


    private void RefreshMe()
    {
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            Display();

    }
    private async void Display()
    {
        await JSRuntime.InvokeAsync<string>("display", "#reg_form");
    }
    public void Reset()
    {
        if (UserService.EmailExists(Email))
        {
            try{
            UserService.RequestCredentialsReset(Email);
            EmailValidationColor= GREEN;
            EmailValidation = "Credentials recovery email was sent.";}
            catch
            {
            EmailValidationColor= RED;
            EmailValidation = "The email does not exist";
            }
        }
        else
        {
            EmailValidationColor= RED;
            EmailValidation = "The email does not exist";
        }
    }

}